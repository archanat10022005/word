import java.util.*;

public class AdvancedWordCount {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        
        System.out.print("Enter a text or provide a file to count the words: ");
        String input = scanner.nextLine();

        
        if (input.trim().isEmpty()) {
            System.out.println("Error: Input is empty. Please enter valid text or provide a file.");
            return;
        }

       
        Map<String, Integer> wordFrequency = countWords(input);
        int totalWords = getTotalWords(wordFrequency);
        int uniqueWords = getUniqueWords(wordFrequency);

       
        System.out.println("Total number of words: " + totalWords);
        System.out.println("Number of unique words: " + uniqueWords);
        displayWordFrequency(wordFrequency);

        scanner.close();
    }

    private static Map<String, Integer> countWords(String text) {
        // Define common words to ignore
        Set<String> stopWords = new HashSet<>(Arrays.asList("is", "a", "the", "for", "and"));

        
        String[] words = text.split("\\s+|[,.;?!]+");

        
        Map<String, Integer> wordFrequency = new HashMap<>();

        
        for (String word : words) {
            if (!word.isEmpty() && !stopWords.contains(word.toLowerCase())) {
                wordFrequency.put(word.toLowerCase(), wordFrequency.getOrDefault(word.toLowerCase(), 0) + 1);
            }
        }

        return wordFrequency;
    }

    private static int getTotalWords(Map<String, Integer> wordFrequency) {
        return wordFrequency.values().stream().mapToInt(Integer::intValue).sum();
    }

    private static int getUniqueWords(Map<String, Integer> wordFrequency) {
        return (int) wordFrequency.keySet().stream().filter(key -> wordFrequency.get(key) == 1).count();
    }

    private static void displayWordFrequency(Map<String, Integer> wordFrequency) {
        System.out.println("Word frequencies:");
        for (Map.Entry<String, Integer> entry : wordFrequency.entrySet()) {
            System.out.println(entry.getKey() + ": " + entry.getValue());
        }
    }
}
